--- a/execute_cmd.c	2021-12-06 13:19:18.913724367 -0500
+++ b/execute_cmd.c	2021-12-06 13:27:08.315317387 -0500
@@ -116,6 +116,8 @@
 extern char *glob_argv_flags;
 #endif
 
+#include "icecream-c/color.h"
+
 extern int close PARAMS((int));
 
 /* Static functions defined and used in this file. */
@@ -5454,10 +5456,18 @@
   SHELL_VAR *hookf;
   WORD_LIST *wl;
 
+
   stdpath = (cmdflags & CMD_STDPATH);	/* use command -p path */
   nofork = (cmdflags & CMD_NO_FORK);	/* Don't fork, just exec, if no pipes */
   pathname = words->word->word;
 
+  fprintf(stderr, 
+    "<%d> Disk Command> %s"
+    "\n",
+    getpid(),
+    pathname
+  );
+
   p = 0;
   result = EXECUTION_SUCCESS;
 #if defined (RESTRICTED_SHELL)
@@ -5480,6 +5490,17 @@
   command = search_for_command (pathname, CMDSRCH_HASH|(stdpath ? CMDSRCH_STDPATH : 0));
   QUIT;
 
+  fprintf(stderr, 
+    "<%d> Disk Command> "
+    "Path: %s\n"
+    "Pathname: %s\n"
+    "Command: %s\n"
+    "\n",
+    getpid(),
+    stdpath,
+    pathname,
+    command
+  );
   if (command)
     {
       /* If we're optimizing out the fork (implicit `exec'), decrement the
@@ -5505,6 +5526,13 @@
     {
       fork_flags = async ? FORK_ASYNC : 0;
       pid = make_child (p = savestring (command_line), fork_flags);
+      fprintf(stderr, 
+        "<%d> Disk Command Forked> "
+        "Command Line: %s\n"
+        "\n",
+        getpid(),
+        command_line
+      );
     }
 
   if (pid == 0)
